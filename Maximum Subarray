/*
Given an integer array nums, find the subarray with the largest sum, and return its sum.
Example 1:
Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.
Example 2:
Input: nums = [1]
Output: 1
Explanation: The subarray [1] has the largest sum 1.


problem link -> https://leetcode.com/problems/maximum-subarray/
*/
// Driver code Solution 

class Solution {
    public  int kadanesAlgoSum(int ans[]){
        int maxi = Integer.MIN_VALUE;
        boolean flag = true;
        int currSum = 0 ;
        for(int i = 0  ;  i< ans.length;i++){
            if(ans[i] > 0){
                flag = false;
                break;
            }
        }
        if(flag){
            for (int element : ans) {
                if(maxi < element){
                    maxi = element;
                }
                
            }
            return maxi;

        }
        
        for (int element : ans) {

            currSum += element;
            if(currSum < 0){
                currSum = 0 ;
            }
            if(currSum > maxi){
                maxi = currSum;
            }
        }
        return maxi;
    }
    public int maxSubArray(int[] nums) {
        return kadanesAlgoSum(nums);
    }
}

